# golang编译环境
FROM golang:1.16-alpine3.13 as gobuilder

RUN  sed -i 's/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apk/repositories

ENV GOPROXY http://goproxy.cn,direct
ENV GOPATH="/go-tdlib:/usr/local/lib/:/usr/local/include/td"
COPY --from=scjtqs/tdlib:1.7.0 /usr/local/include/td /usr/local/include/td
COPY --from=scjtqs/tdlib:1.7.0 /usr/local/lib/libtd* /usr/local/lib/

RUN apk update && apk add --no-cache git gcc libc-dev g++ make openssl-dev zlib-dev ca-certificates tzdata && mkdir /go-tdlib
RUN git clone http://gitlab.scjtqs.com:8000/scjtqs/go-tg-tdlib.git  --depth 1 /go-tdlib/src/
#RUN git clone https://github.com/scjtqs/go-tg.git  --depth 1 /go-tdlib/src/
#COPY . /go-tdlib/

WORKDIR /go-tdlib/src
RUN go mod tidy \
    && CGO_ENABLED=1 go build -ldflags="-s -w" -installsuffix cgo -o go-tg \
    && cp go-tg /go-tg
#    && rm -rf /go-tdlib


##ENTRYPOINT ["/go-tdlib/go-tg"]
##CMD ["/go-tdlib/go-tg"]
#
FROM alpine:3.13

COPY --from=scjtqs/tdlib:1.7.0 /usr/local/include/td /usr/local/include/td
COPY --from=scjtqs/tdlib:1.7.0 /usr/local/lib/libtd* /usr/local/lib/
COPY --from=gobuilder /go-tdlib  /go-tdlib
COPY --from=gobuilder /go-tg  /go-tg
RUN  sed -i 's/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apk/repositories

#RUN apk update && apk add --no-cache libc-dev openssl-dev zlib-dev && rm -rf /var/cache/apk/*
# 设置时区为上海
RUN apk update && apk add --no-cache tzdata \
    && cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \
    && echo "Asia/Shanghai" > /etc/timezone \
    && apk del tzdata   \
    && rm -rf /var/cache/apk/*
## IS_DOCKER true表示每次启动容器，都会动态生成config.json并覆盖现有数据
ENV IS_DOCKER="true"
ENV DEBUG="false"
ENV Phone=""
ENV Password=""
ENV AppID="1807909"
ENV AppHash="4b1594bcfab16b370686b14d85c60559"
## UseFileDatabase 启用消息db
ENV UseMessageDatabase="true"
## UseFileDatabase 启用文件db
ENV UseFileDatabase="true"
## UseChatInfoDatabase 使聊天数据信息存入db
ENV UseChatInfoDatabase="true"
## UseTestDataCenter 是否使用测试服
ENV UseTestDataCenter="false"
ENV DatabaseDirectory="./tdlib-db"
ENV FileDirectory="./tdlib-files"
ENV IgnoreFileNames="false"
## ProxyStatus 是否启用代理服务
ENV ProxyStatus="false"
ENV ProxyType="Socks5"
ENV ProxyAddr="127.0.0.1"
ENV ProxyPort="1234"
ENV ProxyUser=""
ENV ProxyPasswd=""
## WebHook 所有的推送配置，将json压缩成一行放进去
ENV WebHook=""
## WebApiStatus 是否开启api服务
ENV WebApiStatus="false"
ENV WebApiHost=""
ENV WebApiPort=""
ENV WebApiToken=""

WORKDIR /home

COPY run.sh /run.sh

RUN chmod +x /run.sh

CMD ["/run.sh"]


